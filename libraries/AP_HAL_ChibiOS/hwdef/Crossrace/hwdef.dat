# hw definition file for processing by chibios_pins.py
# for mini-pix hardware from RadioLink

# MCU class and specific type
MCU HC32F4xx HC32F4A0xx

# MCU pin definition
define HC32F4A0Px

# debug without uart driver
#define HAL_NO_UARTDRIVER

#define HAL_DSHOT_ALARM	0

# board ID for firmware load
APJ_BOARD_ID 3

# crystal frequency
OSCILLATOR_HZ 24000000

define CH_CFG_ST_FREQUENCY 1875000

# ChibiOS system timer
#HC32_ST_USE_TIMER 1

FLASH_SIZE_KB 2048

# USB setup
USB_VENDOR 0x8836 
USB_PRODUCT 0x1717

# only one I2C bus
I2C_ORDER I2C1 I2C2

# order of USARTs (and USB)
SERIAL_ORDER OTG1 USART1 USART2 USART6 USART4 USART7

# USART6 serial3 GPS
PA0 USART6_TX USART6
PA1 USART6_RX USART6
PA2 BATT_VOLTAGE_SENS ADC1 SCALE(1)
PA3 BATT_CURRENT_SENS ADC1 SCALE(1)
PA4 VDD_5V_SENS ADC1 SCALE(2)

#SPI for ICM42670
PA5 SPI1_SCK SPI1 RESET HIGH
PA6 SPI1_MISO SPI1
PA7 SPI1_MOSI SPI1 RESET HIGH

# USART7 serial5 ESC_TX
PA8 USART7_RX USART7 NODMA
define HAL_SERIAL5_PROTOCOL 16
define HAL_SERIAL5_BAUD 115

# setup for power brick
define HAL_BATT_VOLT_PIN 2
define HAL_BATT_CURR_PIN 3
define HAL_BATT_VOLT_SCALE 12.1
define HAL_BATT_CURR_SCALE 43.0

PA9 USBFS_VBUS INPUT OPENDRAIN RESET

PA11 USBFS_DM OTG1 RESET
PA12 USBFS_DP OTG1 RESET
PA15 TIMA_6_PWM4 TIMA_6 GPIO(77) ALARM

PB0 TIM6_2_PWMB TIM6_2 RCIN PULLDOWN
PB2 BOOT1 INPUT

# USART4 serial4 O3
PB3 USART4_RX USART4 NODMA
PB4 USART4_TX USART4 NODMA
define HAL_SERIAL4_PROTOCOL 33

PB5 VDD_BRICK_VALID INPUT PULLDOWN

PB8 I2C1_SCL I2C1
PB9 I2C1_SDA I2C1
PB10 I2C2_SCL I2C2
PB11 I2C2_SDA I2C2

PB13 SPI2_SCK SPI2
PB14 SPI2_MISO SPI2
PB15 SPI2_MOSI SPI2

PC0 VBUS_VALID INPUT PULLDOWN
PC1 RSSI_IN ADC1
PC2 FLASH_CS CS HIGH
PC3 LED_SAFETY OUTPUT
#PC4 SAFETY_IN SAFETY INPUT

# default to RCIN using timer capture
PC7 TIM6_6_PWMA TIM6_6 PPMIN # RC Input PPM

PC13 SBUS_INV OUTPUT
PC14 ICM42670_DRDY INPUT
PC15 ICM42670_CS CS HIGH

# USART2 serial2 telem2
PD5 USART2_TX USART2
PD6 USART2_RX USART2

# USART1 serial3 telem1
PD8 USART1_TX USART1	
PD9 USART1_RX USART1
PD10 OSD_CS CS HIGH

PE3 VDD_SENSORS_EN OUTPUT HIGH

# If you need to use dshot, enable dma channel for timers and 
# modify the function bool RCOutput::setup_group_DMA in libraties/AP_HAL_ChibiOS/RCOutput.cpp

define HC32_TMRA_1_UP_DMA_CHANNEL   HC32_DMA_CHANNEL_ID(1, 6)
define HC32_TMRA_4_UP_DMA_CHANNEL   HC32_DMA_CHANNEL_ID(1, 7)
define HC32_TMRA_9_UP_DMA_CHANNEL   HC32_DMA_CHANNEL_ID(2, 5)

# PWM outputs via groups, so it is best to set the channels of the same timer to adjacent output pins
# Such as TIMA_1_PWM1 - TIMA_1_PWM4 setup to PWM(1)-PWM(4)

PE9  TIMA_1_PWM1 TIMA_1 PWM(1) GPIO(50)
PE11 TIMA_1_PWM2 TIMA_1 PWM(2) GPIO(51)
PE13 TIMA_1_PWM3 TIMA_1 PWM(3) GPIO(52)
PE14 TIMA_1_PWM4 TIMA_1 PWM(4) GPIO(53)
PD12 TIMA_4_PWM1 TIMA_4 PWM(5) GPIO(54)
PD13 TIMA_4_PWM2 TIMA_4 PWM(6) GPIO(55)
PD14 TIMA_4_PWM3 TIMA_4 PWM(7) GPIO(56)
PE6  TIMA_4_PWM4 TIMA_4 PWM(8) GPIO(57)
PC11 TIMA_9_PWM1 TIMA_9 PWM(9) GPIO(58)
PC12 TIMA_9_PWM2 TIMA_9 PWM(10) GPIO(59)
PD0  TIMA_9_PWM3 TIMA_9 PWM(11) GPIO(60)
PD1  TIMA_9_PWM4 TIMA_9 PWM(12) GPIO(61)

# SPI devices
SPIDEV bmi323     SPI1 DEVID1 ICM42670_CS 	 MODE3 1*MHZ 10*MHZ 
SPIDEV bmi270     SPI1 DEVID2 ICM42670_CS 	 MODE3 1*MHZ 10*MHZ 
SPIDEV icm42670   SPI1 DEVID3 ICM42670_CS 	 MODE3 2*MHZ 8*MHZ 
SPIDEV dataflash  SPI2 DEVID1 FLASH_CS       MODE3 15*MHZ 15*MHZ
SPIDEV osd        SPI2 DEVID4 OSD_CS    	 MODE0 15*MHZ 15*MHZ

# one baro
define HAL_BARO_ALLOW_INIT_NO_BARO 1
BARO SPL06  I2C:0:0x76

# one IMU
IMU Invensensev3 SPI:icm42670 ROTATION_ROLL_180
IMU BMI270 SPI:bmi270 ROTATION_ROLL_180_YAW_270
IMU BMI323 SPI:bmi323 ROTATION_ROLL_180_YAW_270

# one external I2C probe
define ALLOW_ARM_NO_COMPASS
define HAL_COMPASS_DEFAULT HAL_COMPASS_NONE
define HAL_PROBE_EXTERNAL_I2C_COMPASSES
define HAL_I2C_INTERNAL_MASK 1
define HAL_COMPASS_AUTO_ROT_DEFAULT 2

# enable logging to dataflash
define HAL_LOGGING_DATAFLASH_ENABLED 1
define HAL_LOGGING_DATAFLASH_DRIVER AP_Logger_W25N01GV

define HAL_BOARD_LOG_DIRECTORY "/APM/LOGS"
define HAL_BOARD_TERRAIN_DIRECTORY "/APM/TERRAIN"

define HAL_STORAGE_SIZE        65536

FLASH_RESERVE_START_KB 184

# enable RAMTROM parameter storage
define STORAGE_FLASH_PAGE 5

# enable FAT filesystem
#define HAL_OS_FATFS_IO 1

# setup for OSD
define OSD_ENABLED 1
define HAL_OSD_TYPE_DEFAULT 1
ROMFS_WILDCARD libraries/AP_OSD/fonts/font0.bin

# LED setup is similar to PixRacer
define HAL_HAVE_PIXRACER_LED
PB1 LED_RED OUTPUT GPIO(0)
PC5 LED_GREEN OUTPUT GPIO(1)
PE12 LED_BLUE OUTPUT GPIO(2)

define HAL_GPIO_A_LED_PIN 0
define HAL_GPIO_B_LED_PIN 1
define HAL_GPIO_C_LED_PIN 2

define HAL_GPIO_LED_ON  0
define HAL_GPIO_LED_OFF 1